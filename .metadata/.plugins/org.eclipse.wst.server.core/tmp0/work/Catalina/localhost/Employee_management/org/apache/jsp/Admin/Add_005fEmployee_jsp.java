/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.80
 * Generated at: 2023-12-23 05:24:17 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import java.sql.DriverManager;
import java.sql.Connection;

public final class Add_005fEmployee_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("java.sql.Statement");
    _jspx_imports_classes.add("java.sql.PreparedStatement");
    _jspx_imports_classes.add("java.sql.DriverManager");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!doctype html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<title>Admin Dashboard</title>\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\"\r\n");
      out.write("	rel=\"stylesheet\"\r\n");
      out.write("	integrity=\"sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN\"\r\n");
      out.write("	crossorigin=\"anonymous\">\r\n");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write(".full-height-sidebar {\r\n");
      out.write("	height: 100vh;\r\n");
      out.write("	background-color: #111;\r\n");
      out.write("	color: white;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".custom-width {\r\n");
      out.write("	width: 280px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn-wider {\r\n");
      out.write("	min-width: 150px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Add CSS to make the right side content scrollable */\r\n");
      out.write(".right-content {\r\n");
      out.write("	overflow-y: auto;\r\n");
      out.write("	height: calc(100vh - 72px); /* Adjust the height as needed */\r\n");
      out.write("	padding: 20px;\r\n");
      out.write("	\r\n");
      out.write("}\r\n");
      out.write(".error-message {\r\n");
      out.write("    color: red;\r\n");
      out.write("    font-size: 12px;\r\n");
      out.write("    margin-top: 5px;\r\n");
      out.write("    display: block;\r\n");
      out.write("}\r\n");
      out.write(".full-height-sidebar {\r\n");
      out.write("	height: 100vh;\r\n");
      out.write("	background-color: #111;\r\n");
      out.write("	color: white;\r\n");
      out.write("\r\n");
      out.write("	/* Set a high z-index to ensure it appears above other content */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".custom-width {\r\n");
      out.write("	width: 280px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".right-content {\r\n");
      out.write("	overflow-y: auto;\r\n");
      out.write("	height: calc(100vh - 72px); /* Adjust the height as needed */\r\n");
      out.write("	padding: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn-toggle, .btn-toggle-nav a {\r\n");
      out.write("	color: #fff; /* White color */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn-toggle:focus, .btn-toggle-nav a:focus {\r\n");
      out.write("	outline: none; /* Remove focus outline */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("<script>\r\n");
      out.write("    function validateForm() {\r\n");
      out.write("        var firstName = document.getElementsByName(\"firstName\")[0].value;\r\n");
      out.write("        var lastName = document.getElementsByName(\"lastName\")[0].value;\r\n");
      out.write("        var email = document.getElementsByName(\"email\")[0].value;\r\n");
      out.write("        var department = document.getElementsByName(\"department\")[0].value;\r\n");
      out.write("        var gender = document.getElementsByName(\"gender\")[0].value;\r\n");
      out.write("        var dob = document.getElementsByName(\"dob\")[0].value;\r\n");
      out.write("        var contact = document.getElementsByName(\"contact\")[0].value;\r\n");
      out.write("        var country = document.getElementsByName(\"country\")[0].value;\r\n");
      out.write("        var address = document.getElementsByName(\"address\")[0].value;\r\n");
      out.write("        var city = document.getElementsByName(\"city\")[0].value;\r\n");
      out.write("        var password = document.getElementsByName(\"password\")[0].value;\r\n");
      out.write("\r\n");
      out.write("        clearErrorMessages(); // Clear previous error messages\r\n");
      out.write("\r\n");
      out.write("        if (firstName.trim() === \"\" || !validateUsername(firstName)) {\r\n");
      out.write("            displayErrorMessage(\"firstNameError\", \"Please enter a  first name\");\r\n");
      out.write("            return false;\r\n");
      out.write("        }\r\n");
      out.write("        if (lastName.trim() === \"\" || !validateUsername(lastName)) {\r\n");
      out.write("            displayErrorMessage(\"lastNameError\", \"Last Name cannot be empty\");\r\n");
      out.write("            return false;\r\n");
      out.write("        }\r\n");
      out.write("        if (email.trim() === \"\"|| !isValidEmail(email)) {\r\n");
      out.write("            displayErrorMessage(\"emailError\", \"Email cannot be empty\");\r\n");
      out.write("            return false;\r\n");
      out.write("        }\r\n");
      out.write("        if (department.trim() === \"\") {\r\n");
      out.write("            displayErrorMessage(\"departmentError\", \"Department cannot be empty\");\r\n");
      out.write("            return false;\r\n");
      out.write("        }\r\n");
      out.write("        if (gender.trim() === \"\") {\r\n");
      out.write("            displayErrorMessage(\"genderError\", \"Gender cannot be empty\");\r\n");
      out.write("            return false;\r\n");
      out.write("        }\r\n");
      out.write("        if (dob.trim() === \"\") {\r\n");
      out.write("            displayErrorMessage(\"dobError\", \"DOB cannot be empty\");\r\n");
      out.write("            return false;\r\n");
      out.write("        }\r\n");
      out.write("        if (contact.trim() === \"\" || isNaN(contact) || contact.length !== 10) {\r\n");
      out.write("            displayErrorMessage(\"contactError\", \"Please enter a valid 10-digit mobile number\");\r\n");
      out.write("            return false;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        if (country.trim() === \"\"|| !validateUsername(country)) {\r\n");
      out.write("            displayErrorMessage(\"countryError\", \"Country cannot be empty\");\r\n");
      out.write("            return false;\r\n");
      out.write("        }\r\n");
      out.write("        if (address.trim() === \"\"|| !validateUsername(address)) {\r\n");
      out.write("            displayErrorMessage(\"addressError\", \"Address cannot be empty\");\r\n");
      out.write("            return false;\r\n");
      out.write("        }\r\n");
      out.write("        if (city.trim() === \"\"|| !validateUsername(city)) {\r\n");
      out.write("            displayErrorMessage(\"cityError\", \"City cannot be empty\");\r\n");
      out.write("            return false;\r\n");
      out.write("        }\r\n");
      out.write("        if (password.trim() === \"\" || !isValidPassword(password)) {\r\n");
      out.write("            displayErrorMessage(\"passwordError\", \"Password cannot be empty\");\r\n");
      out.write("            return false;\r\n");
      out.write("        }\r\n");
      out.write("        // Add similar checks for other fields...\r\n");
      out.write("\r\n");
      out.write("        // If all checks pass, call the code to generate the random code\r\n");
      out.write("        generateRandomCode();\r\n");
      out.write("\r\n");
      out.write("        // Allow the form to be submitted\r\n");
      out.write("        return true;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function displayErrorMessage(elementId, message) {\r\n");
      out.write("        var errorElement = document.getElementById(elementId);\r\n");
      out.write("        if (errorElement) {\r\n");
      out.write("            errorElement.innerHTML = message;\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function clearErrorMessages() {\r\n");
      out.write("        var errorElements = document.getElementsByClassName(\"error-message\");\r\n");
      out.write("        for (var i = 0; i < errorElements.length; i++) {\r\n");
      out.write("            errorElements[i].innerHTML = \"\";\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function generateRandomCode() {\r\n");
      out.write("        var prefix = \"MMIWFE\";\r\n");
      out.write("        var randomCode = generateRandom4DigitNumber();\r\n");
      out.write("        var employeeId = prefix + randomCode;\r\n");
      out.write("        document.getElementById(\"employeeId\").value = employeeId;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function generateRandom4DigitNumber() {\r\n");
      out.write("        return String(Math.floor(1000 + Math.random() * 9000));\r\n");
      out.write("    }\r\n");
      out.write("    function isValidEmail(email) {\r\n");
      out.write("        var emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n");
      out.write("        return emailRegex.test(email);\r\n");
      out.write("    }\r\n");
      out.write("    function validateUsername(name) {\r\n");
      out.write("        // Trim the username to remove leading and trailing whitespaces\r\n");
      out.write("        var trimmedUsername = name.trim();\r\n");
      out.write("\r\n");
      out.write("        // Check if the trimmed username is between 3 and 20 characters\r\n");
      out.write("        if (trimmedUsername.length < 3 || trimmedUsername.length > 20) {\r\n");
      out.write("            displayErrorMessage(\"usernameError\", \"Username must be between 3 and 20 characters\");\r\n");
      out.write("            return false;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Check if the username contains only letters\r\n");
      out.write("        var nameRegex = /^[a-zA-Z]+$/;\r\n");
      out.write("        if (!nameRegex.test(trimmedUsername)) {\r\n");
      out.write("            displayErrorMessage(\"usernameError\", \"Username must contain only letters\");\r\n");
      out.write("            return false;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // You can add additional checks or validation logic if needed\r\n");
      out.write("\r\n");
      out.write("        return true;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    function isValidPassword(password) {\r\n");
      out.write("        // Minimum length of 8 characters\r\n");
      out.write("        if (password.length < 8) {\r\n");
      out.write("            displayErrorMessage(\"passwordError\", \"Password must be at least 8 characters long\");\r\n");
      out.write("            return false;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Should contain at least one uppercase letter\r\n");
      out.write("        if (!/[A-Z]/.test(password)) {\r\n");
      out.write("            displayErrorMessage(\"passwordError\", \"Password must contain at least one uppercase letter\");\r\n");
      out.write("            return false;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Should contain at least one lowercase letter\r\n");
      out.write("        if (!/[a-z]/.test(password)) {\r\n");
      out.write("            displayErrorMessage(\"passwordError\", \"Password must contain at least one lowercase letter\");\r\n");
      out.write("            return false;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Should contain at least one digit\r\n");
      out.write("        if (!/\\d/.test(password)) {\r\n");
      out.write("            displayErrorMessage(\"passwordError\", \"Password must contain at least one digit\");\r\n");
      out.write("            return false;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Should contain at least one special character (e.g., !@#$%^&*)\r\n");
      out.write("        if (!/[!@#$%^&*]/.test(password)) {\r\n");
      out.write("            displayErrorMessage(\"passwordError\", \"Password must contain at least one special character\");\r\n");
      out.write("            return false;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // If all checks pass, consider the password as strong\r\n");
      out.write("        return true;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.1/css/all.min.css\"\r\n");
      out.write("	integrity=\"sha512-MV7K8+y+gLIBoVD59lQIYicR65iaqukzvf/nwasF0nqhPay5w/9lJmVM2hMDcnK1OnMGCdVK+iQrJ7lzPJQd1w==\"\r\n");
      out.write("	crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\" />\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("	<div class=\"row\">\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/Admin/include.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		<!-- ==================================== Second Div Start ===================== -->\r\n");
      out.write("		<div class=\"container col-lg-9 bg-light mt-4 right-content\">\r\n");
      out.write("\r\n");
      out.write("			<div class=\"card-body\">\r\n");
      out.write("				<nav class=\"navbar navbar-light bg-light\">\r\n");
      out.write("					<div class=\"container-fluid\">\r\n");
      out.write("						<a class=\"navbar-brand\" href=\"#\"><h4>Employee Section</h4></a> <a\r\n");
      out.write("							class=\"navbar-brand\" href=\"#\">Home/Employee Management</a>\r\n");
      out.write("						<!-- 	<button type=\"button\" class=\"btn btn-primary\"\r\n");
      out.write("							style=\"hight: 200px; width: 200px\">Admin</button> -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("						<div class=\"dropdown nav-item \">\r\n");
      out.write("							<a class=\"btn btn-success dropdown-toggle btn-lg  btn-wider \"\r\n");
      out.write("								href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\"\r\n");
      out.write("								aria-expanded=\"false\">Admin</a>\r\n");
      out.write("							<ul class=\"dropdown-menu\">\r\n");
      out.write("								<li><a class=\"dropdown-item\" href=\"#\">Log-Out</a></li>\r\n");
      out.write("							</ul>\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("				</nav>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<hr>\r\n");
      out.write("			<div class=\"container mt-4\">\r\n");
      out.write("				<div class=\" mt-3 mb-5\">\r\n");
      out.write("					<h5>Please fill up the form in order to add Employee records</h5>\r\n");
      out.write("				</div>\r\n");
      out.write("				<form action=\"../Add_Employee\" method=\"post\"\r\n");
      out.write("					onsubmit=\"generateRandomCode(); return validateForm();   return confirmSubmit();\">\r\n");
      out.write("\r\n");
      out.write("					<!-- <div class=\"mb-3\">\r\n");
      out.write("						<label for=\"exampleInputEmail1\" class=\"form-label\">Employee\r\n");
      out.write("							ID</label> <input type=\"text\" class=\"form-control\"\r\n");
      out.write("							aria-describedby=\"emailHelp\" name=\"employeeId\" disabled\r\n");
      out.write("							placeholder=\"Employee ID is Auto Generated \">\r\n");
      out.write("					</div> -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("					<div class=\"mb-3\">\r\n");
      out.write("						<label for=\"exampleInputPassword1\" class=\"form-label\">Employee\r\n");
      out.write("							ID</label> <input type=\"text\" class=\"form-control\" id=\"employeeId\"\r\n");
      out.write("							name=\"employeeId\" readonly\r\n");
      out.write("							placeholder=\"Employee ID is Auto Generated\">\r\n");
      out.write("					</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("					<div class=\"mb-3\">\r\n");
      out.write("						<label for=\"exampleInputPassword1\" class=\"form-label\">First\r\n");
      out.write("							Name</label> <input type=\"text\" class=\"form-control\" name=\"firstName\">\r\n");
      out.write("						<span id=\"firstNameError\" class=\"error-message\"></span>\r\n");
      out.write("					</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("					<div class=\"mb-3\">\r\n");
      out.write("						<label for=\"exampleInputPassword1\" class=\"form-label\">Last\r\n");
      out.write("							Name</label> <input type=\"text\" class=\"form-control\" name=\"lastName\">\r\n");
      out.write("							<span id=\"lastNameError\" class=\"error-message\"></span>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"mb-3\">\r\n");
      out.write("						<label for=\"exampleInputPassword1\" class=\"form-label\">Email</label>\r\n");
      out.write("						<input type=\"email\" class=\"form-control\" name=\"email\">\r\n");
      out.write("						<div id=\"emailHelp\" class=\"form-text\">We'll never share your\r\n");
      out.write("							email with anyone else.\r\n");
      out.write("							<span id=\"emailError\" class=\"error-message\"></span>\r\n");
      out.write("							</div>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"mb-3\">\r\n");
      out.write("						<label for=\"exampleInputPassword1\" class=\"form-label\">Preferred\r\n");
      out.write("							Department</label> <select name=\"department\" class=\"form-control\"\r\n");
      out.write("							placeholder=\"Please Select the Department\">\r\n");
      out.write("							<option value=\"\">Select Departments</option>\r\n");
      out.write("							");

							try {
								Class.forName("com.mysql.cj.jdbc.Driver");
								Connection conn = DriverManager
								.getConnection("jdbc:mysql://localhost:3306/employee_management?user=root&password=root123@");
								String sql = "Select * from departments";
								Statement pstmt = conn.createStatement();
								ResultSet rs = pstmt.executeQuery(sql);
								while (rs.next()) {
							
      out.write("\r\n");
      out.write("							<option value=\"");
      out.print(rs.getString("Department_Name"));
      out.write('"');
      out.write('>');
      out.print(rs.getString("Department_Name"));
      out.write("</option>\r\n");
      out.write("							");

							}
							
      out.write("\r\n");
      out.write("\r\n");
      out.write("							");

							} catch (Exception e) {
							e.printStackTrace();

							}
							
      out.write("\r\n");
      out.write("\r\n");
      out.write("						</select>\r\n");
      out.write("						<span id=\"departmentError\" class=\"error-message\"></span>\r\n");
      out.write("					</div>\r\n");
      out.write("\r\n");
      out.write("					<div class=\"mb-3\">\r\n");
      out.write("						<label for=\"exampleInputPassword1\" class=\"form-label\">Choose\r\n");
      out.write("							Gender</label> <select name=\"gender\" class=\"form-control\"\r\n");
      out.write("							placeholder=\"Please Select the Gender\">\r\n");
      out.write("							<option value=\"\">Select Gender</option>\r\n");
      out.write("							<option value=\"male\">Male</option>\r\n");
      out.write("							<option value=\"female\">Female</option>\r\n");
      out.write("							<option value=\"other\">Other</option>\r\n");
      out.write("						</select>\r\n");
      out.write("						<span id=\"genderError\" class=\"error-message\"></span>\r\n");
      out.write("					</div>\r\n");
      out.write("\r\n");
      out.write("					<div class=\"mb-3\">\r\n");
      out.write("						<label for=\"exampleInputPassword1\" class=\"form-label\">DOB</label>\r\n");
      out.write("						<input type=\"date\" class=\"form-control\" name=\"dob\">\r\n");
      out.write("						<span id=\"dobError\" class=\"error-message\"></span>\r\n");
      out.write("					</div>\r\n");
      out.write("\r\n");
      out.write("					<div class=\"mb-3\">\r\n");
      out.write("						<label for=\"exampleInputPassword1\" class=\"form-label\">Contact\r\n");
      out.write("							Number</label> <input type=\"number\" class=\"form-control\" name=\"contact\">\r\n");
      out.write("							<span id=\"contactError\" class=\"error-message\"></span>\r\n");
      out.write("					</div>\r\n");
      out.write("\r\n");
      out.write("					<div class=\"mb-3\">\r\n");
      out.write("						<label for=\"exampleInputPassword1\" class=\"form-label\">Country</label>\r\n");
      out.write("						<input type=\"text\" class=\"form-control\" name=\"country\">\r\n");
      out.write("						<span id=\"countryError\" class=\"error-message\"></span>\r\n");
      out.write("					</div>\r\n");
      out.write("                \r\n");
      out.write("                \r\n");
      out.write("                \r\n");
      out.write("                \r\n");
      out.write("           <!--      ==================================================================================== -->\r\n");
      out.write("           \r\n");
      out.write("           \r\n");
      out.write("           \r\n");
      out.write("           \r\n");
      out.write("           \r\n");
      out.write("           \r\n");
      out.write("           \r\n");
      out.write("           \r\n");
      out.write("           \r\n");
      out.write("           \r\n");
      out.write("           \r\n");
      out.write("           \r\n");
      out.write("          <!--  ============================================================================================================= -->\r\n");
      out.write("					<div class=\"mb-3\">\r\n");
      out.write("						<label for=\"exampleInputPassword1\" class=\"form-label\">Address\r\n");
      out.write("						</label> <input type=\"text\" class=\"form-control\" name=\"address\">\r\n");
      out.write("						<span id=\"addressError\" class=\"error-message\"></span>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"mb-3\">\r\n");
      out.write("						<label for=\"exampleInputPassword1\" class=\"form-label\">City</label>\r\n");
      out.write("						<input type=\"text\" class=\"form-control\" name=\"city\">\r\n");
      out.write("						<span id=\"cityError\" class=\"error-message\"></span>\r\n");
      out.write("					</div>\r\n");
      out.write("					<h3>Set password for Employee Login</h3>\r\n");
      out.write("					<div class=\"mb-3\">\r\n");
      out.write("						<label for=\"exampleInputPassword1\" class=\"form-label\">Password</label>\r\n");
      out.write("						<input type=\"password\" class=\"form-control\" name=\"password\">\r\n");
      out.write("						<span id=\"passwordError\" class=\"error-message\"></span>\r\n");
      out.write("					</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("					<button type=\"submit\" class=\"btn btn-primary\">Process</button>\r\n");
      out.write("				</form>\r\n");
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		<!-- 	========================second div end ========================= -->\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<script>\r\n");
      out.write("		function generateRandomCode() {\r\n");
      out.write("			// Define the prefix and generate a random 4-digit number\r\n");
      out.write("			var prefix = \"MMIWFE\";\r\n");
      out.write("			var randomCode = generateRandom4DigitNumber();\r\n");
      out.write("\r\n");
      out.write("			// Combine the prefix and the random code\r\n");
      out.write("			var employeeId = prefix + randomCode;\r\n");
      out.write("\r\n");
      out.write("			// Set the generated code to the input field\r\n");
      out.write("			document.getElementById(\"employeeId\").value = employeeId;\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		function generateRandom4DigitNumber() {\r\n");
      out.write("			return String(Math.floor(1000 + Math.random() * 9000));\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("	</script>\r\n");
      out.write("	<script>\r\n");
      out.write("    function confirmSubmit() {\r\n");
      out.write("        // Show a SweetAlert confirmation dialog\r\n");
      out.write("        Swal.fire({\r\n");
      out.write("            title: 'Are you sure?',\r\n");
      out.write("            text: 'You are about to submit the form.',\r\n");
      out.write("            icon: 'warning',\r\n");
      out.write("            showCancelButton: true,\r\n");
      out.write("            confirmButtonText: 'Yes, submit it!',\r\n");
      out.write("            cancelButtonText: 'No, cancel!',\r\n");
      out.write("        }).then((result) => {\r\n");
      out.write("            // If the user clicks \"Yes\"\r\n");
      out.write("            if (result.isConfirmed) {\r\n");
      out.write("                // Proceed with form submission\r\n");
      out.write("                Swal.fire('Submitted!', 'The form has been submitted.', 'success')\r\n");
      out.write("                    .then(() => {\r\n");
      out.write("                        // Redirect to another page\r\n");
      out.write("                         window.location.href = 'Employee/Employee_dashboard.jsp'; \r\n");
      out.write("                    });\r\n");
      out.write("            } else {\r\n");
      out.write("                // If the user clicks \"No\", cancel form submission\r\n");
      out.write("                Swal.fire('Cancelled', 'Form submission has been cancelled.', 'info');\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        // Return false to prevent the form from being submitted immediately\r\n");
      out.write("        return false;\r\n");
      out.write("    }\r\n");
      out.write("</script>  \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<script\r\n");
      out.write("		src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js\"\r\n");
      out.write("		integrity=\"sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL\"\r\n");
      out.write("		crossorigin=\"anonymous\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
